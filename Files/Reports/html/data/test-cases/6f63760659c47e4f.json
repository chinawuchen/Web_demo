{"uid":"6f63760659c47e4f","name":"test_information_success[test_info11-compare11]","fullName":"Tests.TestPersonal.test_personal.TestPersonal#test_information_success","historyId":"e9e2ddfd5e115736aaab3ffc1d956286","time":{"start":1690640964386,"stop":1690640969985,"duration":5599},"status":"failed","statusMessage":"AssertionError: assert '江西省 南昌市 (修改)' == '江西省 南昌市 九江县 (修改)'\n  - 江西省 南昌市 九江县 (修改)\n  ?        ----\n  + 江西省 南昌市 (修改)","statusTrace":"sefl = <Tests.TestPersonal.test_personal.TestPersonal object at 0x1103bdf00>\ntest_info = {'CaseName': '设置-个人资料_基本资料_修改成功-出生地省、市', 'birthcity': '南昌市', 'birthcommunity': '', 'birthday': '', ...}\ncompare = {'birth': '江西省 南昌市 (修改)'}\nlogin_page = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0c7195d162d9f64242a24aba3e3cfb28\")>\n\n    @pytest.mark.information\n    @pytest.mark.parametrize(\"test_info, compare\", information_cases_success)\n    def test_information_success(sefl, test_info, compare, login_page):\n        logger.info(f\" 执行 {sys._getframe().f_code.co_name} 测试用例 \")\n        logger.info(f\" 基本资料正常测试用例：{test_info['CaseName']} \")\n        personal_page = PersonalPage(login_page)\n        personal_page.get().choose_bloodtype(test_info[\"bloodtype\"]).choose_gender(test_info[\"gender\"]).choose_ymd(\n            test_info[\"birthyear\"], test_info[\"birthmonth\"], test_info[\"birthday\"]).choose_birth(test_info[\"birthprovince\"], test_info[\"birthcity\"], test_info[\"birthdist\"], test_info[\"birthcommunity\"]).choose_reside(test_info[\"resideprovince\"], test_info[\"residecity\"], test_info[\"residedist\"], test_info[\"residecommunity\"]).choose_submit()\n        key, expected = list(compare.items())[0]  # 实际结果方式，预期结果\n        user_info = personal_page.get_information_success(key)\n        logger.info(f\"预期结果：{expected}\")\n        logger.info(f\"实际结果：{user_info}\")\n        try:\n            assert expected == user_info\n            logger.info(f\" 结束执行 {sys._getframe().f_code.co_name} 测试用例， 测试结果 --- PASS \")\n        except AssertionError as e:\n            personal_page.save_screenshot(f\"失败用例截图：{(test_info['CaseName'])}\")\n            logger.error(f\"实际结果与预期结果不符: {user_info} != {expected}\")\n            logger.error(f\" 结束执行 {sys._getframe().f_code.co_name} 测试用例， 测试结果 --- Fail \")\n>           raise e\n\nTests/TestPersonal/test_personal.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsefl = <Tests.TestPersonal.test_personal.TestPersonal object at 0x1103bdf00>\ntest_info = {'CaseName': '设置-个人资料_基本资料_修改成功-出生地省、市', 'birthcity': '南昌市', 'birthcommunity': '', 'birthday': '', ...}\ncompare = {'birth': '江西省 南昌市 (修改)'}\nlogin_page = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0c7195d162d9f64242a24aba3e3cfb28\")>\n\n    @pytest.mark.information\n    @pytest.mark.parametrize(\"test_info, compare\", information_cases_success)\n    def test_information_success(sefl, test_info, compare, login_page):\n        logger.info(f\" 执行 {sys._getframe().f_code.co_name} 测试用例 \")\n        logger.info(f\" 基本资料正常测试用例：{test_info['CaseName']} \")\n        personal_page = PersonalPage(login_page)\n        personal_page.get().choose_bloodtype(test_info[\"bloodtype\"]).choose_gender(test_info[\"gender\"]).choose_ymd(\n            test_info[\"birthyear\"], test_info[\"birthmonth\"], test_info[\"birthday\"]).choose_birth(test_info[\"birthprovince\"], test_info[\"birthcity\"], test_info[\"birthdist\"], test_info[\"birthcommunity\"]).choose_reside(test_info[\"resideprovince\"], test_info[\"residecity\"], test_info[\"residedist\"], test_info[\"residecommunity\"]).choose_submit()\n        key, expected = list(compare.items())[0]  # 实际结果方式，预期结果\n        user_info = personal_page.get_information_success(key)\n        logger.info(f\"预期结果：{expected}\")\n        logger.info(f\"实际结果：{user_info}\")\n        try:\n>           assert expected == user_info\nE           AssertionError: assert '江西省 南昌市 (修改)' == '江西省 南昌市 九江县 (修改)'\nE             - 江西省 南昌市 九江县 (修改)\nE             ?        ----\nE             + 江西省 南昌市 (修改)\n\nTests/TestPersonal/test_personal.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1690640681009,"stop":1690640681035,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser","time":{"start":1690640681035,"stop":1690640684263,"duration":3228},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"login_page","time":{"start":1690640684264,"stop":1690640689993,"duration":5729},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '江西省 南昌市 (修改)' == '江西省 南昌市 九江县 (修改)'\n  - 江西省 南昌市 九江县 (修改)\n  ?        ----\n  + 江西省 南昌市 (修改)","statusTrace":"sefl = <Tests.TestPersonal.test_personal.TestPersonal object at 0x1103bdf00>\ntest_info = {'CaseName': '设置-个人资料_基本资料_修改成功-出生地省、市', 'birthcity': '南昌市', 'birthcommunity': '', 'birthday': '', ...}\ncompare = {'birth': '江西省 南昌市 (修改)'}\nlogin_page = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0c7195d162d9f64242a24aba3e3cfb28\")>\n\n    @pytest.mark.information\n    @pytest.mark.parametrize(\"test_info, compare\", information_cases_success)\n    def test_information_success(sefl, test_info, compare, login_page):\n        logger.info(f\" 执行 {sys._getframe().f_code.co_name} 测试用例 \")\n        logger.info(f\" 基本资料正常测试用例：{test_info['CaseName']} \")\n        personal_page = PersonalPage(login_page)\n        personal_page.get().choose_bloodtype(test_info[\"bloodtype\"]).choose_gender(test_info[\"gender\"]).choose_ymd(\n            test_info[\"birthyear\"], test_info[\"birthmonth\"], test_info[\"birthday\"]).choose_birth(test_info[\"birthprovince\"], test_info[\"birthcity\"], test_info[\"birthdist\"], test_info[\"birthcommunity\"]).choose_reside(test_info[\"resideprovince\"], test_info[\"residecity\"], test_info[\"residedist\"], test_info[\"residecommunity\"]).choose_submit()\n        key, expected = list(compare.items())[0]  # 实际结果方式，预期结果\n        user_info = personal_page.get_information_success(key)\n        logger.info(f\"预期结果：{expected}\")\n        logger.info(f\"实际结果：{user_info}\")\n        try:\n            assert expected == user_info\n            logger.info(f\" 结束执行 {sys._getframe().f_code.co_name} 测试用例， 测试结果 --- PASS \")\n        except AssertionError as e:\n            personal_page.save_screenshot(f\"失败用例截图：{(test_info['CaseName'])}\")\n            logger.error(f\"实际结果与预期结果不符: {user_info} != {expected}\")\n            logger.error(f\" 结束执行 {sys._getframe().f_code.co_name} 测试用例， 测试结果 --- Fail \")\n>           raise e\n\nTests/TestPersonal/test_personal.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsefl = <Tests.TestPersonal.test_personal.TestPersonal object at 0x1103bdf00>\ntest_info = {'CaseName': '设置-个人资料_基本资料_修改成功-出生地省、市', 'birthcity': '南昌市', 'birthcommunity': '', 'birthday': '', ...}\ncompare = {'birth': '江西省 南昌市 (修改)'}\nlogin_page = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0c7195d162d9f64242a24aba3e3cfb28\")>\n\n    @pytest.mark.information\n    @pytest.mark.parametrize(\"test_info, compare\", information_cases_success)\n    def test_information_success(sefl, test_info, compare, login_page):\n        logger.info(f\" 执行 {sys._getframe().f_code.co_name} 测试用例 \")\n        logger.info(f\" 基本资料正常测试用例：{test_info['CaseName']} \")\n        personal_page = PersonalPage(login_page)\n        personal_page.get().choose_bloodtype(test_info[\"bloodtype\"]).choose_gender(test_info[\"gender\"]).choose_ymd(\n            test_info[\"birthyear\"], test_info[\"birthmonth\"], test_info[\"birthday\"]).choose_birth(test_info[\"birthprovince\"], test_info[\"birthcity\"], test_info[\"birthdist\"], test_info[\"birthcommunity\"]).choose_reside(test_info[\"resideprovince\"], test_info[\"residecity\"], test_info[\"residedist\"], test_info[\"residecommunity\"]).choose_submit()\n        key, expected = list(compare.items())[0]  # 实际结果方式，预期结果\n        user_info = personal_page.get_information_success(key)\n        logger.info(f\"预期结果：{expected}\")\n        logger.info(f\"实际结果：{user_info}\")\n        try:\n>           assert expected == user_info\nE           AssertionError: assert '江西省 南昌市 (修改)' == '江西省 南昌市 九江县 (修改)'\nE             - 江西省 南昌市 九江县 (修改)\nE             ?        ----\nE             + 江西省 南昌市 (修改)\n\nTests/TestPersonal/test_personal.py:29: AssertionError","steps":[],"attachments":[{"uid":"433265682e982aca","name":"log","source":"433265682e982aca.txt","type":"text/plain","size":1117474}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[{"name":"login_page::0","time":{"start":1690640974838,"stop":1690640974838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"browser::0","time":{"start":1690640974839,"stop":1690640974966,"duration":127},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"tag","value":"information"},{"name":"tag","value":"@pytest.mark.usefixtures('login_page')"},{"name":"parentSuite","value":"Tests.TestPersonal"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonal"},{"name":"host","value":"wuchendeMacBook-Air.local"},{"name":"thread","value":"44078-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.TestPersonal.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"compare","value":"{'birth': '江西省 南昌市 (修改)'}"},{"name":"test_info","value":"{'CaseName': '设置-个人资料_基本资料_修改成功-出生地省、市', 'bloodtype': '', 'gender': '', 'birthyear': '', 'birthmonth': '', 'birthday': '', 'birthprovince': '江西省', 'birthcity': '南昌市', 'birthdist': '', 'birthcommunity': '', 'resideprovince': '', 'residecity': '', 'residedist': '', 'residecommunity': ''}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('login_page')","information"]},"source":"6f63760659c47e4f.json","parameterValues":["{'birth': '江西省 南昌市 (修改)'}","{'CaseName': '设置-个人资料_基本资料_修改成功-出生地省、市', 'bloodtype': '', 'gender': '', 'birthyear': '', 'birthmonth': '', 'birthday': '', 'birthprovince': '江西省', 'birthcity': '南昌市', 'birthdist': '', 'birthcommunity': '', 'resideprovince': '', 'residecity': '', 'residedist': '', 'residecommunity': ''}"]}